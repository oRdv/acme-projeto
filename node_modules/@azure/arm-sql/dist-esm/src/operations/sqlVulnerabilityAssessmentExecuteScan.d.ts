import { SqlVulnerabilityAssessmentExecuteScan } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { VulnerabilityAssessmentName, SqlVulnerabilityAssessmentExecuteScanExecuteOptionalParams } from "../models";
/** Class containing SqlVulnerabilityAssessmentExecuteScan operations. */
export declare class SqlVulnerabilityAssessmentExecuteScanImpl implements SqlVulnerabilityAssessmentExecuteScan {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlVulnerabilityAssessmentExecuteScan class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Executes a Vulnerability Assessment database scan.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param options The options parameters.
     */
    beginExecute(resourceGroupName: string, serverName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, options?: SqlVulnerabilityAssessmentExecuteScanExecuteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Executes a Vulnerability Assessment database scan.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param options The options parameters.
     */
    beginExecuteAndWait(resourceGroupName: string, serverName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, options?: SqlVulnerabilityAssessmentExecuteScanExecuteOptionalParams): Promise<void>;
}
//# sourceMappingURL=sqlVulnerabilityAssessmentExecuteScan.d.ts.map