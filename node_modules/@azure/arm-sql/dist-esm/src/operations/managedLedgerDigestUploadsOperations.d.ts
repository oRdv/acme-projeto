import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ManagedLedgerDigestUploadsOperations } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { ManagedLedgerDigestUploads, ManagedLedgerDigestUploadsListByDatabaseOptionalParams, ManagedLedgerDigestUploadsName, ManagedLedgerDigestUploadsGetOptionalParams, ManagedLedgerDigestUploadsGetResponse, ManagedLedgerDigestUploadsCreateOrUpdateOptionalParams, ManagedLedgerDigestUploadsCreateOrUpdateResponse, ManagedLedgerDigestUploadsDisableOptionalParams, ManagedLedgerDigestUploadsDisableResponse } from "../models";
/** Class containing ManagedLedgerDigestUploadsOperations operations. */
export declare class ManagedLedgerDigestUploadsOperationsImpl implements ManagedLedgerDigestUploadsOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class ManagedLedgerDigestUploadsOperations class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets all ledger digest upload settings on a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param options The options parameters.
     */
    listByDatabase(resourceGroupName: string, managedInstanceName: string, databaseName: string, options?: ManagedLedgerDigestUploadsListByDatabaseOptionalParams): PagedAsyncIterableIterator<ManagedLedgerDigestUploads>;
    private listByDatabasePagingPage;
    private listByDatabasePagingAll;
    /**
     * Gets all ledger digest upload settings on a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param options The options parameters.
     */
    private _listByDatabase;
    /**
     * Gets the current ledger digest upload configuration for a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param ledgerDigestUploads
     * @param options The options parameters.
     */
    get(resourceGroupName: string, managedInstanceName: string, databaseName: string, ledgerDigestUploads: ManagedLedgerDigestUploadsName, options?: ManagedLedgerDigestUploadsGetOptionalParams): Promise<ManagedLedgerDigestUploadsGetResponse>;
    /**
     * Enables upload ledger digests to an Azure Storage account or an Azure Confidential Ledger instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param ledgerDigestUploads The name of the Ledger Digest Upload Configurations.
     * @param parameters The Ledger Digest Storage Endpoint.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, managedInstanceName: string, databaseName: string, ledgerDigestUploads: ManagedLedgerDigestUploadsName, parameters: ManagedLedgerDigestUploads, options?: ManagedLedgerDigestUploadsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<ManagedLedgerDigestUploadsCreateOrUpdateResponse>, ManagedLedgerDigestUploadsCreateOrUpdateResponse>>;
    /**
     * Enables upload ledger digests to an Azure Storage account or an Azure Confidential Ledger instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param ledgerDigestUploads The name of the Ledger Digest Upload Configurations.
     * @param parameters The Ledger Digest Storage Endpoint.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, managedInstanceName: string, databaseName: string, ledgerDigestUploads: ManagedLedgerDigestUploadsName, parameters: ManagedLedgerDigestUploads, options?: ManagedLedgerDigestUploadsCreateOrUpdateOptionalParams): Promise<ManagedLedgerDigestUploadsCreateOrUpdateResponse>;
    /**
     * Disables uploading ledger digests to an Azure Storage account or an Azure Confidential Ledger
     * instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param ledgerDigestUploads
     * @param options The options parameters.
     */
    beginDisable(resourceGroupName: string, managedInstanceName: string, databaseName: string, ledgerDigestUploads: ManagedLedgerDigestUploadsName, options?: ManagedLedgerDigestUploadsDisableOptionalParams): Promise<SimplePollerLike<OperationState<ManagedLedgerDigestUploadsDisableResponse>, ManagedLedgerDigestUploadsDisableResponse>>;
    /**
     * Disables uploading ledger digests to an Azure Storage account or an Azure Confidential Ledger
     * instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param ledgerDigestUploads
     * @param options The options parameters.
     */
    beginDisableAndWait(resourceGroupName: string, managedInstanceName: string, databaseName: string, ledgerDigestUploads: ManagedLedgerDigestUploadsName, options?: ManagedLedgerDigestUploadsDisableOptionalParams): Promise<ManagedLedgerDigestUploadsDisableResponse>;
    /**
     * ListByDatabaseNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the database.
     * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.
     * @param options The options parameters.
     */
    private _listByDatabaseNext;
}
//# sourceMappingURL=managedLedgerDigestUploadsOperations.d.ts.map