import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SqlVulnerabilityAssessmentScanResult } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { SqlVulnerabilityAssessmentScanResults, SQLVulnerabilityAssessmentName, SqlVulnerabilityAssessmentScanResultListByScanOptionalParams, SqlVulnerabilityAssessmentScanResultGetOptionalParams, SqlVulnerabilityAssessmentScanResultGetResponse } from "../models";
/** Class containing SqlVulnerabilityAssessmentScanResult operations. */
export declare class SqlVulnerabilityAssessmentScanResultImpl implements SqlVulnerabilityAssessmentScanResult {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlVulnerabilityAssessmentScanResult class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets a vulnerability assessment scan record of a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the SQL Vulnerability Assessment.
     * @param scanId The scan id of the SQL Vulnerability Assessment scan to retrieve result from.
     * @param options The options parameters.
     */
    listByScan(resourceGroupName: string, serverName: string, vulnerabilityAssessmentName: SQLVulnerabilityAssessmentName, scanId: string, options?: SqlVulnerabilityAssessmentScanResultListByScanOptionalParams): PagedAsyncIterableIterator<SqlVulnerabilityAssessmentScanResults>;
    private listByScanPagingPage;
    private listByScanPagingAll;
    /**
     * Gets a vulnerability assessment scan record of a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the SQL Vulnerability Assessment.
     * @param scanId The scan id of the SQL Vulnerability Assessment scan to retrieve result from.
     * @param options The options parameters.
     */
    private _listByScan;
    /**
     * Gets a vulnerability assessment scan record of a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the SQL Vulnerability Assessment.
     * @param scanId The scan id of the SQL Vulnerability Assessment scan to retrieve result from.
     * @param scanResultId The scan result id of the specific result to retrieve.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serverName: string, vulnerabilityAssessmentName: SQLVulnerabilityAssessmentName, scanId: string, scanResultId: string, options?: SqlVulnerabilityAssessmentScanResultGetOptionalParams): Promise<SqlVulnerabilityAssessmentScanResultGetResponse>;
    /**
     * ListByScanNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the SQL Vulnerability Assessment.
     * @param scanId The scan id of the SQL Vulnerability Assessment scan to retrieve result from.
     * @param nextLink The nextLink from the previous successful call to the ListByScan method.
     * @param options The options parameters.
     */
    private _listByScanNext;
}
//# sourceMappingURL=sqlVulnerabilityAssessmentScanResult.d.ts.map