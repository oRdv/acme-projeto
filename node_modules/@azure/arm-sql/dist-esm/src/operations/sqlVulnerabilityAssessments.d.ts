import { SqlVulnerabilityAssessments } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { VulnerabilityAssessmentName, SqlVulnerabilityAssessmentsDeleteOptionalParams } from "../models";
/** Class containing SqlVulnerabilityAssessments operations. */
export declare class SqlVulnerabilityAssessmentsImpl implements SqlVulnerabilityAssessments {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlVulnerabilityAssessments class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Removes SQL Vulnerability Assessment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the SQL Vulnerability Assessment.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, serverName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, options?: SqlVulnerabilityAssessmentsDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=sqlVulnerabilityAssessments.d.ts.map