import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { EndpointCertificates } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { EndpointCertificate, EndpointCertificatesListByInstanceOptionalParams, EndpointCertificatesGetOptionalParams, EndpointCertificatesGetResponse } from "../models";
/** Class containing EndpointCertificates operations. */
export declare class EndpointCertificatesImpl implements EndpointCertificates {
    private readonly client;
    /**
     * Initialize a new instance of the class EndpointCertificates class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * List certificates used on endpoints on the target instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param options The options parameters.
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, options?: EndpointCertificatesListByInstanceOptionalParams): PagedAsyncIterableIterator<EndpointCertificate>;
    private listByInstancePagingPage;
    private listByInstancePagingAll;
    /**
     * List certificates used on endpoints on the target instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param options The options parameters.
     */
    private _listByInstance;
    /**
     * Gets a certificate used on the endpoint with the given id.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param endpointType Type of the endpoint whose certificate the customer is looking for.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, managedInstanceName: string, endpointType: string, options?: EndpointCertificatesGetOptionalParams): Promise<EndpointCertificatesGetResponse>;
    /**
     * ListByInstanceNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param nextLink The nextLink from the previous successful call to the ListByInstance method.
     * @param options The options parameters.
     */
    private _listByInstanceNext;
}
//# sourceMappingURL=endpointCertificates.d.ts.map