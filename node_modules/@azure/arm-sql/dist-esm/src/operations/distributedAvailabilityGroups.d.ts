import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DistributedAvailabilityGroups } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { DistributedAvailabilityGroup, DistributedAvailabilityGroupsListByInstanceOptionalParams, DistributedAvailabilityGroupsGetOptionalParams, DistributedAvailabilityGroupsGetResponse, DistributedAvailabilityGroupsCreateOrUpdateOptionalParams, DistributedAvailabilityGroupsCreateOrUpdateResponse, DistributedAvailabilityGroupsDeleteOptionalParams, DistributedAvailabilityGroupsUpdateOptionalParams, DistributedAvailabilityGroupsUpdateResponse } from "../models";
/** Class containing DistributedAvailabilityGroups operations. */
export declare class DistributedAvailabilityGroupsImpl implements DistributedAvailabilityGroups {
    private readonly client;
    /**
     * Initialize a new instance of the class DistributedAvailabilityGroups class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets a list of a distributed availability groups in instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param options The options parameters.
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, options?: DistributedAvailabilityGroupsListByInstanceOptionalParams): PagedAsyncIterableIterator<DistributedAvailabilityGroup>;
    private listByInstancePagingPage;
    private listByInstancePagingAll;
    /**
     * Gets a list of a distributed availability groups in instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param options The options parameters.
     */
    private _listByInstance;
    /**
     * Gets a distributed availability group info.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param distributedAvailabilityGroupName The distributed availability group name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, managedInstanceName: string, distributedAvailabilityGroupName: string, options?: DistributedAvailabilityGroupsGetOptionalParams): Promise<DistributedAvailabilityGroupsGetResponse>;
    /**
     * Creates a distributed availability group between Sql On-Prem and Sql Managed Instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param distributedAvailabilityGroupName The distributed availability group name.
     * @param parameters The distributed availability group info.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, managedInstanceName: string, distributedAvailabilityGroupName: string, parameters: DistributedAvailabilityGroup, options?: DistributedAvailabilityGroupsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DistributedAvailabilityGroupsCreateOrUpdateResponse>, DistributedAvailabilityGroupsCreateOrUpdateResponse>>;
    /**
     * Creates a distributed availability group between Sql On-Prem and Sql Managed Instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param distributedAvailabilityGroupName The distributed availability group name.
     * @param parameters The distributed availability group info.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, managedInstanceName: string, distributedAvailabilityGroupName: string, parameters: DistributedAvailabilityGroup, options?: DistributedAvailabilityGroupsCreateOrUpdateOptionalParams): Promise<DistributedAvailabilityGroupsCreateOrUpdateResponse>;
    /**
     * Drops a distributed availability group between Sql On-Prem and Sql Managed Instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param distributedAvailabilityGroupName The distributed availability group name.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, managedInstanceName: string, distributedAvailabilityGroupName: string, options?: DistributedAvailabilityGroupsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * Drops a distributed availability group between Sql On-Prem and Sql Managed Instance.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param distributedAvailabilityGroupName The distributed availability group name.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, managedInstanceName: string, distributedAvailabilityGroupName: string, options?: DistributedAvailabilityGroupsDeleteOptionalParams): Promise<void>;
    /**
     * Updates a distributed availability group replication mode.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param distributedAvailabilityGroupName The distributed availability group name.
     * @param parameters The distributed availability group info.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, managedInstanceName: string, distributedAvailabilityGroupName: string, parameters: DistributedAvailabilityGroup, options?: DistributedAvailabilityGroupsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<DistributedAvailabilityGroupsUpdateResponse>, DistributedAvailabilityGroupsUpdateResponse>>;
    /**
     * Updates a distributed availability group replication mode.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param distributedAvailabilityGroupName The distributed availability group name.
     * @param parameters The distributed availability group info.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, managedInstanceName: string, distributedAvailabilityGroupName: string, parameters: DistributedAvailabilityGroup, options?: DistributedAvailabilityGroupsUpdateOptionalParams): Promise<DistributedAvailabilityGroupsUpdateResponse>;
    /**
     * ListByInstanceNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param nextLink The nextLink from the previous successful call to the ListByInstance method.
     * @param options The options parameters.
     */
    private _listByInstanceNext;
}
//# sourceMappingURL=distributedAvailabilityGroups.d.ts.map