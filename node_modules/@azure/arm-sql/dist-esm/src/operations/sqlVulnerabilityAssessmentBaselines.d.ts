import { SqlVulnerabilityAssessmentBaselines } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { VulnerabilityAssessmentName, BaselineName, DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput, SqlVulnerabilityAssessmentBaselinesCreateOrUpdateOptionalParams, SqlVulnerabilityAssessmentBaselinesCreateOrUpdateResponse } from "../models";
/** Class containing SqlVulnerabilityAssessmentBaselines operations. */
export declare class SqlVulnerabilityAssessmentBaselinesImpl implements SqlVulnerabilityAssessmentBaselines {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlVulnerabilityAssessmentBaselines class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Add a database's vulnerability assessment rule baseline list.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param baselineName
     * @param parameters The requested rule baseline resource.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, serverName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, baselineName: BaselineName, parameters: DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput, options?: SqlVulnerabilityAssessmentBaselinesCreateOrUpdateOptionalParams): Promise<SqlVulnerabilityAssessmentBaselinesCreateOrUpdateResponse>;
}
//# sourceMappingURL=sqlVulnerabilityAssessmentBaselines.d.ts.map