/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates or updates an elastic pool.
 *
 * @summary Creates or updates an elastic pool.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-08-01-preview/examples/HyperscaleElasticPoolCreateOrUpdateSetHighAvailabilityReplicaCount.json
 */
function createOrUpdateHyperscaleElasticPoolWithHighAvailabilityReplicaCountParameter() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SQL_SUBSCRIPTION_ID"] ||
            "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = process.env["SQL_RESOURCE_GROUP"] || "sqlcrudtest-2369";
        const serverName = "sqlcrudtest-8069";
        const elasticPoolName = "sqlcrudtest-8102";
        const parameters = {
            highAvailabilityReplicaCount: 2,
            location: "Japan East",
            sku: { name: "HS_Gen5_4" }
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.elasticPools.beginCreateOrUpdateAndWait(resourceGroupName, serverName, elasticPoolName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Creates or updates an elastic pool.
 *
 * @summary Creates or updates an elastic pool.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-08-01-preview/examples/ElasticPoolCreateOrUpdateMax.json
 */
function createOrUpdateElasticPoolWithAllParameter() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SQL_SUBSCRIPTION_ID"] ||
            "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = process.env["SQL_RESOURCE_GROUP"] || "sqlcrudtest-2369";
        const serverName = "sqlcrudtest-8069";
        const elasticPoolName = "sqlcrudtest-8102";
        const parameters = {
            location: "Japan East",
            perDatabaseSettings: { maxCapacity: 2, minCapacity: 0.25 },
            sku: { name: "GP_Gen4_2", capacity: 2, tier: "GeneralPurpose" }
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.elasticPools.beginCreateOrUpdateAndWait(resourceGroupName, serverName, elasticPoolName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Creates or updates an elastic pool.
 *
 * @summary Creates or updates an elastic pool.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-08-01-preview/examples/ElasticPoolCreateOrUpdateSetMaintenanceConfiguration.json
 */
function createOrUpdateElasticPoolWithMaintenanceConfigurationParameter() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SQL_SUBSCRIPTION_ID"] ||
            "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = process.env["SQL_RESOURCE_GROUP"] || "sqlcrudtest-2369";
        const serverName = "sqlcrudtest-8069";
        const elasticPoolName = "sqlcrudtest-8102";
        const parameters = {
            location: "Japan East",
            maintenanceConfigurationId: "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_JapanEast_1"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.elasticPools.beginCreateOrUpdateAndWait(resourceGroupName, serverName, elasticPoolName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Creates or updates an elastic pool.
 *
 * @summary Creates or updates an elastic pool.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-08-01-preview/examples/ElasticPoolCreateOrUpdateMin.json
 */
function createOrUpdateElasticPoolWithMinimumParameters() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SQL_SUBSCRIPTION_ID"] ||
            "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = process.env["SQL_RESOURCE_GROUP"] || "sqlcrudtest-2369";
        const serverName = "sqlcrudtest-8069";
        const elasticPoolName = "sqlcrudtest-8102";
        const parameters = { location: "Japan East" };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.elasticPools.beginCreateOrUpdateAndWait(resourceGroupName, serverName, elasticPoolName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createOrUpdateHyperscaleElasticPoolWithHighAvailabilityReplicaCountParameter();
        createOrUpdateElasticPoolWithAllParameter();
        createOrUpdateElasticPoolWithMaintenanceConfigurationParameter();
        createOrUpdateElasticPoolWithMinimumParameters();
    });
}
main().catch(console.error);
//# sourceMappingURL=elasticPoolsCreateOrUpdateSample.js.map