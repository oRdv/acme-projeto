/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates or updates a managed instance key.
 *
 * @summary Creates or updates a managed instance key.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedInstanceKeyCreateOrUpdate.json
 */
function createsOrUpdatesAManagedInstanceKey() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SQL_SUBSCRIPTION_ID"] ||
            "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = process.env["SQL_RESOURCE_GROUP"] || "sqlcrudtest-7398";
        const managedInstanceName = "sqlcrudtest-4645";
        const keyName = "someVault_someKey_01234567890123456789012345678901";
        const parameters = {
            serverKeyType: "AzureKeyVault",
            uri: "https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.managedInstanceKeys.beginCreateOrUpdateAndWait(resourceGroupName, managedInstanceName, keyName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createsOrUpdatesAManagedInstanceKey();
    });
}
main().catch(console.error);
//# sourceMappingURL=managedInstanceKeysCreateOrUpdateSample.js.map