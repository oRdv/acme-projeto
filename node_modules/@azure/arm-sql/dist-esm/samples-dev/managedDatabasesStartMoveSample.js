/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Starts a managed database move operation.
 *
 * @summary Starts a managed database move operation.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-05-01-preview/examples/ManagedDatabaseStartMoveMax.json
 */
function startsAManagedDatabaseMoveWithAllOptionalParametersSpecified() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SQL_SUBSCRIPTION_ID"] ||
            "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = process.env["SQL_RESOURCE_GROUP"] || "group1";
        const managedInstanceName = "testInstanceSrc";
        const databaseName = "testDatabase";
        const parameters = {
            destinationManagedDatabaseId: "subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/managedInstances/testInstanceTgt/databases/testDatabase",
            operationMode: "Copy"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.managedDatabases.beginStartMoveAndWait(resourceGroupName, managedInstanceName, databaseName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Starts a managed database move operation.
 *
 * @summary Starts a managed database move operation.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-05-01-preview/examples/ManagedDatabaseStartMoveMin.json
 */
function startsAManagedDatabaseMoveWithNoOptionalParametersSpecified() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["SQL_SUBSCRIPTION_ID"] ||
            "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = process.env["SQL_RESOURCE_GROUP"] || "group1";
        const managedInstanceName = "testInstanceSrc";
        const databaseName = "testDatabase";
        const parameters = {
            destinationManagedDatabaseId: "subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/managedInstances/testInstanceTgt/databases/testDatabase"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.managedDatabases.beginStartMoveAndWait(resourceGroupName, managedInstanceName, databaseName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        startsAManagedDatabaseMoveWithAllOptionalParametersSpecified();
        startsAManagedDatabaseMoveWithNoOptionalParametersSpecified();
    });
}
main().catch(console.error);
//# sourceMappingURL=managedDatabasesStartMoveSample.js.map